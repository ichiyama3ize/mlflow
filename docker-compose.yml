version: "3.8"
services:

  mlflow:
    container_name: ${COMPOSE_PROJECT_NAME}-tracking
    build:
      context: ./containers/tracking-server
      dockerfile: Dockerfile
    expose:
      - ${MLFLOW_PORT}
    ports:
      - "${MLFLOW_PORT}:${MLFLOW_PORT}"
    restart: unless-stopped
    depends_on:
      - waitfordb
      - minio
    environment:
      TZ: Asia/Tokyo
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${COMPOSE_PROJECT_NAME}-${DB_HOST}
      DB_NAME: ${DB_NAME}
      MLFLOW_S3_ENDPOINT_URL: ${AWS_ENDPOINT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    command: >
      mlflow server
      --backend-store-uri "postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${COMPOSE_PROJECT_NAME}-${DB_HOST}:5432/${DB_NAME}"
      --artifacts-destination 's3://mlflow/artifacts' 
      --serve-artifacts --host 0.0.0.0 --port ${MLFLOW_PORT}

  waitfordb:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db-server
    restart: always
    command: db-server:5432

  db-server:
    image: postgres:13.3
    container_name: ${COMPOSE_PROJECT_NAME}-${DB_HOST}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: "Asia/Tokyo"
    ports:
      - 5432:5432
    volumes:
      - $PWD/db_server:/var/lib/postgresql/data

  # S3互換のストレージ
  minio:
    image: minio/minio
    container_name: ${COMPOSE_PROJECT_NAME}-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server /export --address :9000 --console-address :9001
    volumes:
      - ./minio/data:/export

  # minioコンテナ起動時にデフォルトのバケットを自動作成する
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio ${AWS_ENDPOINT} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc rm -r --force myminio/${AWS_BUCKET};
      /usr/bin/mc mb myminio/${AWS_BUCKET};
      exit 0;"

  ngrok:
    image: ngrok/ngrok
    container_name: ${COMPOSE_PROJECT_NAME}-ngrok
    depends_on:
      - mlflow
    restart: unless-stopped
    command:
      - "start"
      - "--authtoken"
      - "${NGROK_AUTH_TOKEN}"
      - "--all"
      - "--config"
      - "/var/lib/ngrok/ngrok.yml"
    volumes:
      - ./ngrok/ngrok.log:/var/log/ngrok.log
      - ./ngrok/ngrok.yml:/var/lib/ngrok/ngrok.yml
    ports:
      - 4040:4040